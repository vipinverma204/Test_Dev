(function(){var e,t;t=["ngRoute","ui.bootstrap","myApp.filters","myApp.services","myApp.controllers","myApp.directives","myApp.common","myApp.routeConfig"],e=angular.module("myApp",t),angular.module("myApp.routeConfig",["ngRoute"]).config(["$routeProvider",function(e){return e.when("/",{templateUrl:"/assets/partials/view.html"}).when("/users/create",{templateUrl:"/assets/partials/create.html"}).when("/users/edit/:firstName/:lastName",{templateUrl:"/assets/partials/update.html"}).otherwise({redirectTo:"/"})}]).config(["$locationProvider",function(e){return e.html5Mode({enabled:!0,requireBase:!1})}]),this.commonModule=angular.module("myApp.common",[]),this.controllersModule=angular.module("myApp.controllers",[]),this.servicesModule=angular.module("myApp.services",[]),this.modelsModule=angular.module("myApp.models",[]),this.directivesModule=angular.module("myApp.directives",[]),this.filtersModule=angular.module("myApp.filters",[])}).call(this),function(){commonModule.value("version","0.1.1")}.call(this),function(){directivesModule.directive("appVersion",["version",function(e){return function(t,r){return r.text(e)}}])}.call(this),function(){var e;e=function(){function e(e,t,r){this.$log=e,this.$location=t,this.UserService=r,this.$log.debug("constructing CreateUserController"),this.user={}}return e.prototype.createUser=function(){return this.$log.debug("createUser()"),this.user.active=!0,this.UserService.createUser(this.user).then(function(e){return function(t){return e.$log.debug("Promise returned "+t+" User"),e.user=t,e.$location.path("/")}}(this),function(e){return function(t){return e.$log.error("Unable to create User: "+t)}}(this))},e}(),controllersModule.controller("CreateUserCtrl",["$log","$location","UserService",e])}.call(this),function(){var e;e=function(){function e(e,t,r,s){this.$log=e,this.$location=t,this.$routeParams=r,this.UserService=s,this.$log.debug("constructing UpdateUserController"),this.user={},this.findUser()}return e.prototype.updateUser=function(){return this.$log.debug("updateUser()"),this.user.active=!0,this.UserService.updateUser(this.$routeParams.firstName,this.$routeParams.lastName,this.user).then(function(e){return function(t){return e.$log.debug("Promise returned "+t+" User"),e.user=t,e.$location.path("/")}}(this),function(e){return function(t){return e.$log.error("Unable to update User: "+t)}}(this))},e.prototype.findUser=function(){var e,t;return e=this.$routeParams.firstName,t=this.$routeParams.lastName,this.$log.debug("findUser route params: "+e+" "+t),this.UserService.listUsers().then(function(r){return function(s){return r.$log.debug("Promise returned "+s.length+" Users"),r.user=s.filter(function(r){return r.firstName===e&&r.lastName===t})[0]}}(this),function(e){return function(t){return e.$log.error("Unable to get Users: "+t)}}(this))},e}(),controllersModule.controller("UpdateUserCtrl",["$log","$location","$routeParams","UserService",e])}.call(this),function(){var e;e=function(){function e(e,t){this.$log=e,this.UserService=t,this.$log.debug("constructing UserController"),this.users=[],this.getAllUsers()}return e.prototype.getAllUsers=function(){return this.$log.debug("getAllUsers()"),this.UserService.listUsers().then(function(e){return function(t){return e.$log.debug("Promise returned "+t.length+" Users"),e.users=t}}(this),function(e){return function(t){return e.$log.error("Unable to get Users: "+t)}}(this))},e}(),controllersModule.controller("UserCtrl",["$log","UserService",e])}.call(this),function(){var e;e=function(){function e(e,t,r){this.$log=e,this.$http=t,this.$q=r,this.$log.debug("constructing UserService")}return e.headers={Accept:"application/json","Content-Type":"application/json"},e.defaultConfig={headers:e.headers},e.prototype.listUsers=function(){var e;return this.$log.debug("listUsers()"),e=this.$q.defer(),this.$http.get("/users").success(function(t){return function(r,s){return t.$log.info("Successfully listed Users - status "+s),e.resolve(r)}}(this)).error(function(t){return function(r,s){return t.$log.error("Failed to list Users - status "+s),e.reject(r)}}(this)),e.promise},e.prototype.createUser=function(e){var t;return this.$log.debug("createUser "+angular.toJson(e,!0)),t=this.$q.defer(),this.$http.post("/user",e).success(function(e){return function(r,s){return e.$log.info("Successfully created User - status "+s),t.resolve(r)}}(this)).error(function(e){return function(r,s){return e.$log.error("Failed to create user - status "+s),t.reject(r)}}(this)),t.promise},e.prototype.updateUser=function(e,t,r){var s;return this.$log.debug("updateUser "+angular.toJson(r,!0)),s=this.$q.defer(),this.$http.put("/user/"+e+"/"+t,r).success(function(e){return function(t,r){return e.$log.info("Successfully updated User - status "+r),s.resolve(t)}}(this)).error(function(e){return function(t,r){return e.$log.error("Failed to update user - status "+r),s.reject(t)}}(this)),s.promise},e}(),servicesModule.service("UserService",["$log","$http","$q",e])}.call(this);
//# sourceMappingURL=concat.min.js.map